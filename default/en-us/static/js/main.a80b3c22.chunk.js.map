{"version":3,"sources":["GameTile.js","App.js","serviceWorker.js","index.js"],"names":["ResponsiveEllipsis","responsiveHOC","LinesEllipsis","polyfill","GameTile","props","state","games","addDefaultSrc","bind","promises","oid","cost","variant","fullWcPrice","map","obj","i","axios","get","then","result","prod","data","results","genre","tagLength","tags","length","ha","tagtype","displayname","releaseDate","Date","releasedate","value","match","productkey","title","friendlyproductkey","wildcoinspurchasecost","purchasecost","toFixed","fullPrice","ranking","mostpopularrating","rank","sessioncost","catch","error","console","Promise","all","res","setState","this","getGames","e","img","target","src","dataset","classList","remove","add","showGames","game","onClick","tileClick","className","data-event-action","data-event-category","data-event-label","key","data-orderitemid","bigIcon","alt","onError","data-oid","style","whiteSpace","text","maxLine","ellipsis","trimRight","basedOn","component","Math","abs","Component","App","showToggle","changepricesDisplay","updatePricesShown","window","location","price","showPricesIn","wildCointAmmount","document","getElementsByClassName","parseInt","children","textContent","addEventListener","id","activeGame","activeGameSection","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a80b3c22.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { polyfill } from 'es6-promise';\nimport axios from 'axios';\nimport './css/GameTile.scss';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport responsiveHOC from 'react-lines-ellipsis/lib/responsiveHOC';\n\nconst ResponsiveEllipsis = responsiveHOC()(LinesEllipsis)\n\n\n\npolyfill();\n\nclass GameTile extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: []\n    }\n    this.addDefaultSrc = this.addDefaultSrc.bind(this);\n  }\n\n  getGames(){\n    let gamesArr = [\n      //test oids\n      //{oid:\"tendaysunderthesea\", fullPrice:\t9.99, fullWcPrice:\t40},\n      // {oid:\"thewitchsapprenticeamagicaalmish\", fullPrice:\t19.99, fullWcPrice:\t40},\n      // {oid:\"oidbrav005277queensquest5ce\", fullPrice:\t19.99, fullWcPrice:\t40},\n      // {oid:\"bigkahunawords\", fullPrice:\t19.99, fullWcPrice:\t40},\n\n      //OIDS GO HERE EXAMPLE: {oid:\"oidimma006073renzoracer\", fullPrice:\t9.99, fullWcPrice:\t40},\n\n      //https://products.wildtangent.com/products/v1.0/wildgames/us/en-us/bestofhiddenobject?output=json&scope=all\n\n      //{oid:\"bestofhiddenobject\", cost: 5, variant: \"rent\"},\n      {oid:\"oidlazy005535thefarkingdomsh\",cost: 3, variant: \"buy\", fullWcPrice: 40},\n      //{oid:\"moai3trademission\",cost: 1, variant: \"rent\"},\n      {oid:\"aliciaquatermainsotltse\",cost: 5, variant: \"buy\", fullWcPrice: 20},\n      {oid:\"farmscapes\",cost: 2, variant: \"buy\", fullWcPrice: 20},\n      //{oid:\"runefall\",cost: 1, variant: \"rent\"},\n      {oid:\"seasonmatch3hd\",cost: 4, variant: \"buy\", fullWcPrice: 40},\n      //{oid:\"jigsawworldtour\",cost: 2, variant: \"rent\"},\n      //{oid:\"avalonlegendssolitaire3\",cost: 3, variant: \"rent\"},\n      {oid:\"Vikingsaga\",cost: 1, variant: \"buy\", fullWcPrice: 6}\n    ],\n    promises = gamesArr.map((obj, i) => {\n      const X = axios.get(`https://products.wildtangent.com/products/v1.0/wildgames/us/en-us/${obj.oid}?output=json&scope=all`)\n        .then(result => {\n          let prod = result.data.results[0],\n              genre = (i => {\n                let tagLength = i.tags.length;\n                for (let ha = 0; ha < tagLength; ha++){\n                  if ('Genre' === i.tags[ha].tagtype){\n                    return i.tags[ha].displayname;\n                  }\n                }\n                return null\n              })(prod),\n              releaseDate = new Date(prod.releasedate.value.match(/\\d+/)[0] * 1),\n              game = {\n                'oid':obj.oid,\n                'variant':obj.variant,\n\n                'productkey':prod.productkey,\n                'title': prod.title,\n                'i': i,\n                'friendlyproductkey':prod.friendlyproductkey,\n                'fullWcPrice': obj.fullWcPrice,\n                'wildcoinspurchasecost': prod.wildcoinspurchasecost,\n                'genre': genre,\n                'bigIcon': `https://optimizedimages.wildtangent.com/${prod.productkey}/big_icon.png?h=160&w=160&auto=compress&cs=tinysrgb`,\n                'featuredTile': `https://optimizedimages.wildtangent.com/${prod.productkey}/featured_tile.jpg?auto=compress&cs=tinysrgb`,\n                'purchasecost': prod.purchasecost.value.toFixed(2),\n                'fullPrice': obj.fullPrice,\n                'releasedate': releaseDate,\n                'wcPrice': prod.wildcoinspurchasecost.value,\n                'ranking': prod.ranking.mostpopularrating.rank,\n                'sessioncost': prod.sessioncost\n\n                 // 'fullPrice': prod.purchasecost.value.toFixed(2),\n                 // 'fullWcPrice': prod.wildcoinspurchasecost.value,\n              };\n        return game;\n      }).catch(error => { console.error(`An error occured ${error}`) });\n    return X;\n  });\n    return Promise.all(promises)\n    // .then(res => {\n    //   return res.sort((a,b) => {\n    //     return a.ranking - b.ranking;\n    //   })\n    // })\n    // .then(results => {\n    //   return results.sort((a, b ) => {\n    //     return b.releasedate - a.releasedate;\n    //   });\n    // })\n    .then(res =>{\n      this.setState({\n        games: res\n      });\n    });\n\n  }\n\n  componentDidMount(){\n    this.getGames();\n  }\n\n  addDefaultSrc(e){\n    let img = e.target;\n    img.src = `https://optimizedimages.wildtangent.com/${img.dataset.oid}/big_icon.png?auto=format&dpr=1&cs=tinysrgb&fill=blur&crop=false&fit=fillmax&w=350&h=143&ixlib=react-7.2.0`;\n    img.classList.remove('featuredTile');\n    img.classList.add('bigIcon');\n  }\n\n  render(){\n    return (\n      <>\n      { (this.state.games.length > 0 && this.props.showGames === true ) ? this.state.games.map(game => {\n          return (\n\n            <div onClick={() => this.props.tileClick(game)}\n               className=\"wrapperElement col-xs-6 col-sm-6 col-md-5ths col-lg-5ths col-xl-5ths active\"\n               data-event-action=\"Game-Offer Tile\"\n               data-event-category=\"Landing Page\"\n               data-event-label={game.productkey}\n               key={game.i}\n               data-orderitemid={game.productkey}>\n            <div className=\"innerWrapper\">\n            <div className=\"bigIconDiv\">\n              <img src={game.bigIcon} className=\"bigIcon\" alt={game.title} onError={this.addDefaultSrc} data-oid={game.productkey} />\n            </div>\n\n            <ResponsiveEllipsis style={{ whiteSpace: 'pre-wrap' }}\n              text={game.title}\n               maxLine='2'\n               ellipsis='...'\n               trimRight='true'\n               basedOn='words'\n               className=\"gameTitle\"\n               component='p'\n            />\n\n            <p className=\"bottom-text\">\n              <span className=\"genre\">{game.genre} </span>\n\n              <span className=\"gamePrice wildcoins\">\n                <span className=\"strikeThrough\">{game.fullWcPrice}</span>\n\n                <span className='sale-and-discount'>\n                  <span className=\"percent-off\">\n                  {Math.abs(((game.wildcoinspurchasecost.value/game.fullWcPrice) - 1) * 100).toFixed()}% off\n                  </span>\n                  <span className=\"wildcoinPrice price\">{game.wildcoinspurchasecost.value}</span>\n                </span>\n\n              </span>\n\n\n            </p>\n\n\n            </div>\n          </div>\n\n      )\n      }) : '' }\n      </>\n    );\n  }\n}\nexport default GameTile\n\n\n//className=\"wrapperElement col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3 active\"\n","import React, { Component } from 'react';\nimport './css/App.scss';\n\nimport GameTile from './GameTile'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      games: [],\n      //showPricesIn: 'cash',\n      showGames: false,\n      showToggle: false // change to false in production\n    }\n    this.tileClick = this.tileClick.bind(this);\n    this.changepricesDisplay = this.changepricesDisplay.bind(this);\n    this.updatePricesShown = this.updatePricesShown.bind(this);\n  }\n  tileClick(game){\n    window.location = `/games/${game.friendlyproductkey}`;\n  }\n  changepricesDisplay(e){\n    let value = e.target.dataset.price;\n      this.setState({\n          showPricesIn: value\n      });\n  }\n\n  updatePricesShown(){\n    let wildCointAmmount = 0;\n    if(document.getElementsByClassName('wildcoins-menu').length > 0){\n      wildCointAmmount = parseInt(document.getElementsByClassName('wildcoins-menu')[0].children[0].textContent);\n    }\n    wildCointAmmount >= 10 ? (\n      this.setState({\n        showGames: true,\n        showPricesIn: 'wildcoins',\n        showToggle: true\n      })\n    ) : (\n      this.setState({\n        showGames: true\n      })\n    );\n  }\n\n  componentDidUpdate(){\n  }\n\n  componentDidMount(){\n    window.addEventListener('load', this.updatePricesShown);\n  }\n\n  render(){\n    return (\n      <div id=\"app\" >\n        <div className=\"container main-container\">\n          <div className=\"row\">\n            <div className=\"col-sm-12 page-title\">\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n            <div className=\"row game-tiles\">\n                <GameTile tileClick={this.tileClick}\n                          activeGame={this.state.activeGameSection}\n                          showPricesIn={this.state.showPricesIn}\n                          showGames={this.state.showGames} />\n            </div>\n            </div>\n          </div>\n          <div className=\"scrollSpacer\"></div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n//import $ from 'jquery';\n//import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './css/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}